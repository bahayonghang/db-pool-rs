[build-system]
requires = ["maturin>=1.4,<2.0"]
build-backend = "maturin"

[project]
name = "db-pool-rs"
version = "0.1.0"
description = "高性能异步数据库连接池框架，基于Rust实现，提供Python接口"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["database", "connection-pool", "async", "rust", "polars"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# 核心依赖
dependencies = [
    "polars>=0.20.0",
    "typing-extensions>=4.0.0",
]

# 可选功能依赖
[project.optional-dependencies]
# 数据库驱动（在Rust侧实现，这里仅用于类型提示）
mssql = []
postgresql = []
redis = []
sqlite = []
influxdb = []
all = []

# 开发依赖
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

# 文档依赖
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
]

# 示例依赖
examples = [
    "pandas>=2.0.0",
    "jupyter>=1.0.0",
    "matplotlib>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/db-pool-rs"
Repository = "https://github.com/yourusername/db-pool-rs.git"
Documentation = "https://db-pool-rs.readthedocs.io"
Changelog = "https://github.com/yourusername/db-pool-rs/blob/main/CHANGELOG.md"

# Maturin 构建配置
[tool.maturin]
features = ["pyo3/extension-module"]
module-name = "db_pool_rs._core"
python-source = "python"
strip = true

# 根据目标平台优化
[tool.maturin.target.x86_64-unknown-linux-gnu]
rustflags = ["-C", "target-cpu=native"]

[tool.maturin.target.x86_64-apple-darwin]
rustflags = ["-C", "target-cpu=native"]

[tool.maturin.target.x86_64-pc-windows-msvc]
rustflags = ["-C", "target-cpu=native"]

# Python 工具配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=db_pool_rs",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
]

[tool.coverage.run]
branch = true
source = ["db_pool_rs"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
target-version = ['py38']
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "polars.*",
    "db_pool_rs._core.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

# UV 工作空间配置
[tool.uv]
dev-dependencies = [
    "maturin>=1.4.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[tool.uv.sources]
# 本地开发时使用源码构建
db-pool-rs = { workspace = true }

# 工作空间配置
[tool.uv.workspace]
members = [".", "examples/*"]
